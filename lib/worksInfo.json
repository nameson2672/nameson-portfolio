[
  {
    "id": 1,
    "slug": "Minna_Chhop_Single_product_e_commerse",
    "title": "Single Product E-Commerse Site",
    "desc": "This is the single product e-commerse site using MERN stack and stripe for payment and google api for male sending and user menagment using google auth provider",
    "image": "https://i.ibb.co/LQ1VfVm/for-port.jpg",
    "stackList": [
      {
        "title": "React",
        "id": 1
      },
      {
        "title": "NodeJS",
        "id": 2
      },
      {
        "title": "ExpressJs",
        "id": 3
      },
      {
        "title": "Stripe",
        "id": 4
      },
      {
        "title": "GoogleAPI",
        "id": 5
      },
      {
        "title": "MongoDB",
        "id": 6
      }
    ],
    "codeLink": "https://github.com/nameson2672/Minna-Chhop-Single-product-e-commerse",
    "liveLink": "https://minachhop.herokuapp.com/",
    "liveStatus": true,
    "explain": "This E-commerce app is built with a MERN stack with Stripe for payment process and Google API for user management and sending mail. The purchase process is simple at the first user adds the product to the cart and process the checkout with stripe and they are directed to stripe with the product info the choose and stripe charge their card and stripe inform node backend with stripe hooks whether the charge on card success or failed and if process success mail with info about the address for delivery and the time it takes it to deliver is sent to the user if it fails user are redirected to card fail page with the problem send by stripe."
  },
  {
    "id": 2,
    "slug": "appointment_scheduler",
    "title": "Appointment Scheduler",
    "desc": "It is an appointment scheduler app currently configured for Appointment with a doctor and patient and it is in a docker container so can run in any platform which can run docker.",
    "image": "https://i.ibb.co/vzcgCMH/For-protofilio.jpg",
    "stackList": [
      {
        "title": "C#",
        "id": 5
      },
      {
        "title": "ASP.NET MVC",
        "id": 1
      },
      {
        "title": "SQL server",
        "id": 2
      },
      {
        "title": "Entitity",
        "id": 3
      },
      {
        "title": "Docker",
        "id": 4
      }
    ],
    "codeLink": "https://github.com/nameson2672/Appointment-Manager",
    "liveLink": "Not publish",
    "liveStatus": false,
    "explain": "This app uses the dotnet framework MVC pattern and SQL server. The app is dockerized with a Microsoft SQL server in one container and an app in another they are able to exchange information with each other and at build time database is created and set up by the app itself. You need to create a profile to use the app and can get an appointment with any doctor available. If you want to run the app on your local machine make sure you have docker set up in your machine and just clone the app and use the command “docker-compose up —build”."
  },
  {
    "id": 3,
    "slug": "bloging_site_using_markdown",
    "title": "Bloging Site Using Markdown",
    "desc": "This is the bloging site which use markdown.It use Firebase as a backend and Google for user managment it is actually a clone of developer bloging site called DEV",
    "image": "https://i.ibb.co/vqrC82G/Screenshot-2022-03-05-103825.jpg",
    "stackList": [
      {
        "title": "NextJS",
        "id": 1
      },
      {
        "title": "React",
        "id": 2
      },
      {
        "title": "Firebase",
        "id": 3
      },
      {
        "id": 5,
        "title": "GoogleAPI"
      },
      {
        "title": "Markdown",
        "id": 4
      }
    ],
    "codeLink": "https://github.com/nameson2672/Dev.to-clone",
    "liveLink": "https://dev-to-clone-woad.vercel.app/",
    "liveStatus": true,
    "explain": "This app uses the NextJS backend framework with the firebase backend. The user uses markdown to create a blog and the app uses the pack called “react-markdown” to render the markdown. In this app use the server-side generation and static-site generation provided by the NextJS framework to provide page fast to end-user and revalidate each page after some time. It uses the auth provider provided by Google API to register users. It uses the real-time snapshot feature provided by firebase to provide a live count of like and dislike on the post."
  },
  {
    "id": 4,
    "slug": "my-portfolio",
    "title": "My Portfolio Site",
    "liveStatus": true,
    "desc": "This is my portfolio site created using NextJS and Chakra Ui where i show case my work and any body can learn about me. And I am also made it so that I can write some blog. So blog are comming soon stay tuned.",
    "image": "https://i.ibb.co/sWNX68z/Screenshot-2022-03-05-112108.jpg",
    "stackList": [
      {
        "title": "NextJS",
        "id": 1
      },
      {
        "title": "Chakra UI",
        "id": 2
      }
    ],
    "codeLink": "code link on github test",
    "liveLink": "live link test",
    "explain": "This is my Portfolio Site built with NextJS and ChakarUI. This site was built to showcase my work and about me. I will be using this site to write a blog and I am thinking of using a markdown blog and use Facebook API to integrate a comment feature where people can comment using their Facebook account. So stay tuned for a blog coming on this site.",
    "motivation": "The motivation behind creating this site is to show my web presence and the work I am doing in the field. As I’m not an IT student so showing to the potential client and to the company this site will help me make a trust that I know about the field and know how to solve problems."
  }
]
